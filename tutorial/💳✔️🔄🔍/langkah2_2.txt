if (! empty(request()->input('payment_status'))) {
    $payment_statuses = request()->input('payment_status');
    
    // Handle single value or array
    if (!is_array($payment_statuses)) {
        $payment_statuses = [$payment_statuses];
    }
    
    // Remove 'all' from array if present
    $payment_statuses = array_filter($payment_statuses, function($status) {
        return $status !== 'all';
    });
    
    // Only apply filter if we have specific statuses (not 'all')
    if (!empty($payment_statuses)) {
        $sells->where(function($query) use ($payment_statuses) {
            $first = true;
            foreach ($payment_statuses as $status) {
                if ($status == 'overdue') {
                    if ($first) {
                        $query->where(function($q) {
                            $q->whereIn('transactions.payment_status', ['due', 'partial'])
                                ->whereNotNull('transactions.pay_term_number')
                                ->whereNotNull('transactions.pay_term_type')
                                ->whereRaw("IF(transactions.pay_term_type='days', DATE_ADD(transactions.transaction_date, INTERVAL transactions.pay_term_number DAY) < CURDATE(), DATE_ADD(transactions.transaction_date, INTERVAL transactions.pay_term_number MONTH) < CURDATE())");
                        });
                        $first = false;
                    } else {
                        $query->orWhere(function($q) {
                            $q->whereIn('transactions.payment_status', ['due', 'partial'])
                                ->whereNotNull('transactions.pay_term_number')
                                ->whereNotNull('transactions.pay_term_type')
                                ->whereRaw("IF(transactions.pay_term_type='days', DATE_ADD(transactions.transaction_date, INTERVAL transactions.pay_term_number DAY) < CURDATE(), DATE_ADD(transactions.transaction_date, INTERVAL transactions.pay_term_number MONTH) < CURDATE())");
                        });
                    }
                } else {
                    if ($first) {
                        $query->where('transactions.payment_status', $status);
                        $first = false;
                    } else {
                        $query->orWhere('transactions.payment_status', $status);
                    }
                }
            }
        });
    }
}